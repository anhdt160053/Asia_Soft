workflows:
    # react-native-android:
    #     name: React Native Android
    #     max_build_duration: 120
    #     instance_type: mac_mini
    #     environment:
    #         groups:
    #         # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
    #             - keystore_credentials # <-- (Includes CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS_PASSWORD, CM_KEY_ALIAS_USERNAME)
    #               # CM_KEYSTORE <-- Put your keystore file here
    #               # CM_KEYSTORE_PASSWORD <-- Put your keystore password here
    #               # CM_KEY_ALIAS_PASSWORD <-- Put your keystore alias password here
    #               # CM_KEY_ALIAS_USERNAME <-- Put your keystore alias username here
    #             - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put your google-services.json)
    #             - other
    #         vars:
    #             PACKAGE_NAME: "YOUR_PACKAGE_NAME" # <-- Put your package name here e.g. com.domain.myapp
    #         node: latest
    #     triggering:
    #         events:
    #             - push
    #             - tag
    #             - pull_request
    #         branch_patterns:
    #             - pattern: develop
    #               include: true
    #               source: true
    #     scripts:
    #         - name: Install npm dependencies
    #           script: |
    #             npm install
    #         - name: Set Android SDK location
    #           script: |
    #             echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
    #         - name: Set up keystore
    #           script: |
    #                 echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
    #                 # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
    #                 # cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
    #                 # storePassword=$CM_KEYSTORE_PASSWORD
    #                 # keyPassword=$CM_KEY_ALIAS_PASSWORD
    #                 # keyAlias=$CM_KEY_ALIAS_USERNAME
    #                 # storeFile=/tmp/keystore.keystore
    #                 # EOF               
    #         - name: Build Android release
    #           script: |
    #             # Set environment variable so it can be used to increment build number in android/app/build.gradle
    #             # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
    #             # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
    #             export LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
    #             cd android && ./gradlew assembleRelease
    #     artifacts:
    #         - android/app/build/outputs/**/*.apk

  react-native-ios:
    name: React Native IOS
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      groups:
        - appstore_credentials
        - certificate_credentials
      vars:
        XCODE_WORKSPACE: "TestCodemagic.xcworkspace" 
        XCODE_SCHEME: "TestCodemagic"       
        BUNDLE_ID: "com.AsiaSoftCo.TestCodemagic" 
        node: latest
        xcode: latest
        cocoapods: default
    triggering:
          events:
            - push
            - tag
            - pull_request
          branch_patterns:
            - pattern: develop
              include: true
              source: true
    scripts:
       - name: Install npm dependencies
         script: npm install
       - name: Install CocoaPods dependencies
         script: 
                    brew install cocoapods
       - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
         script: keychain initialize
       - name: set up provisioning profiles
         script: |
            PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            mkdir -p "$PROFILES_HOME"
            PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
            echo "Saved provisioning profile $PROFILE_PATH"
       - name: Add signing certificate to keychain
         script: |
            echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
       - name: Increment build number
         script: |
           #!/bin/sh
           set -e
           set -x
           cd $CM_BUILD_DIR/ios
           agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))   
       - name: Set up code signing settings on Xcode project
         script: 
          xcode-project use-profiles --warn-only
       - name: Build ipa
         script: 
          xcode-project build-ipa --workspace "ios/TestCodemagic.xcworkspace" --scheme "TestCodemagic"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
     app_store_connect:
      api_key: $APP_STORE_CONNECT_PRIVATE_KEY 
      key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
      issuer_id: $APP_STORE_CONNECT_ISSUER_ID
      submit_to_testflight: true