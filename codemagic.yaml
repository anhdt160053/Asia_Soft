workflows:
    # react-native-android:
    #     name: React Native Android
    #     max_build_duration: 120
    #     instance_type: mac_mini
    #     environment:
    #         groups:
    #         # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
    #             - keystore_credentials # <-- (Includes CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS_PASSWORD, CM_KEY_ALIAS_USERNAME)
    #               # CM_KEYSTORE <-- Put your keystore file here
    #               # CM_KEYSTORE_PASSWORD <-- Put your keystore password here
    #               # CM_KEY_ALIAS_PASSWORD <-- Put your keystore alias password here
    #               # CM_KEY_ALIAS_USERNAME <-- Put your keystore alias username here
    #             - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put your google-services.json)
    #             - other
    #         vars:
    #             PACKAGE_NAME: "YOUR_PACKAGE_NAME" # <-- Put your package name here e.g. com.domain.myapp
    #         node: latest
    #     triggering:
    #         events:
    #             - push
    #             - tag
    #             - pull_request
    #         branch_patterns:
    #             - pattern: develop
    #               include: true
    #               source: true
    #     scripts:
    #         - name: Install npm dependencies
    #           script: |
    #             npm install
    #         - name: Set Android SDK location
    #           script: |
    #             echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
    #         - name: Set up keystore
    #           script: |
    #                 echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
    #                 # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
    #                 # cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
    #                 # storePassword=$CM_KEYSTORE_PASSWORD
    #                 # keyPassword=$CM_KEY_ALIAS_PASSWORD
    #                 # keyAlias=$CM_KEY_ALIAS_USERNAME
    #                 # storeFile=/tmp/keystore.keystore
    #                 # EOF               
    #         - name: Build Android release
    #           script: |
    #             # Set environment variable so it can be used to increment build number in android/app/build.gradle
    #             # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
    #             # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
    #             export LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
    #             cd android && ./gradlew assembleRelease
    #     artifacts:
    #         - android/app/build/outputs/**/*.apk

  react-native-ios:
    name: Production Build - AdHoc Distribution
    environment:
      vars:
        XCODE_WORKSPACE: "project.xcworkspace"
        XCODE_SCHEME: "project"
        BUNDLE_ID: "com.project.app"
        APP_STORE_CONNECT_ISSUER_ID: Encrypted()
        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted()
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted()
        CERTIFICATE_PRIVATE_KEY: Encrypted()
      xcode: latest
      cocoapods: default
    scripts:
      - find . -name "Podfile" -execdir pod install \;
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: keychain initialize
      - name: Fetch signing files
        script: # You can allow creating resources if existing are not found with `--create` flag
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_ADHOC --create
      - name: Use system default keychain
        script: keychain add-certificates
      - name: Set up signing certificate
        script:
          xcode-project use-profiles
      - name: Increment build number
        script: agvtool new-version -all $BUILD_NUMBER
      - name: Build ipa for Adhoc
        script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" --verbose
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - dangtuananh2204@gmail.com